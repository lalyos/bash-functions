#!/bin/bash

: ${DEBUG:=1}

debug() {
  [[ "$DEBUG" ]] && echo "[DEBUG] $*" 1>&2
}

gce_reload_functions() {
  source $BASH_SOURCE
}

gce_upgrade_functions() {
  curl -Lo $BASH_SOURCE j.mp/gce-functions
  source $BASH_SOURCE
}

gce_zones() {
  gcloud compute zones list --format json|jq .[].name -r
}

gce_list_disks() {
	gcloud compute disks list --format json | jq ".[].name" -r
}

gce_clean_unused_disks() {
  for zone in $(gcloud compute zones list --format json|jq .[].name -r); do
	gce_clean_unused_disks_in_zone $zone
  done
}

gce_clean_unused_disks_in_zone() {
  declare zone=$1
  : ${zone:? required}
 
  debug "[$zone] cleaning unsed disks" 
  local used=$(
     gcloud compute instances list --zone $zone --format json \
       | jq '[.[]|.disks[].source]|join("|")' -r \
  )
  local grepFilter=$(echo "$used"| sed "s:|:\\\\|:g")
 
  gcloud compute disks list --zone $zone --format json \
    | jq ".[].name" -r \
    | grep -v "$grepFilter" \
    | xargs --no-run-if-empty -t gcloud compute disks delete --zone $zone 
}

gce_list_runnings() {
	gcloud compute instances list --format json \
	  |jq ".[]|.name, .zone, .status, .networkInterfaces[0].accessConfigs[0].natIP, .networkInterfaces[0].networkIP" -r \
	  |xargs -n 5 printf "%-40s | %-15s | %-10s | %-15s | %-15s \n"
}
